/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';

import '@stencil/router';
import '@stencil/state-tunnel';
import {
  MatchResults,
  RouterHistory,
} from '@stencil/router';
import {
  Formation,
} from './global/formation';


export namespace Components {

  interface SpiCandidatAdd {
    'close': () => void;
  }
  interface SpiCandidatAddAttributes extends StencilHTMLAttributes {}

  interface SpiCandidatEdit {
    'close': () => void;
    'match': MatchResults;
  }
  interface SpiCandidatEditAttributes extends StencilHTMLAttributes {
    'match'?: MatchResults;
  }

  interface SpiCandidatFetch {
    'componentWillLoad': () => Promise<void>;
    'match': MatchResults;
  }
  interface SpiCandidatFetchAttributes extends StencilHTMLAttributes {
    'match'?: MatchResults;
  }

  interface SpiCandidat {
    'load': () => Promise<void>;
  }
  interface SpiCandidatAttributes extends StencilHTMLAttributes {}

  interface SpiEnseignantAdd {
    'match': MatchResults;
  }
  interface SpiEnseignantAddAttributes extends StencilHTMLAttributes {
    'match'?: MatchResults;
  }

  interface SpiEnseignantFetch {
    'deleteEnseignant': (item: any) => Promise<void | Response>;
    'match': MatchResults;
  }
  interface SpiEnseignantFetchAttributes extends StencilHTMLAttributes {
    'match'?: MatchResults;
  }

  interface SpiEnseignant {
    'load': () => Promise<void>;
  }
  interface SpiEnseignantAttributes extends StencilHTMLAttributes {}

  interface SpiFormationAdd {}
  interface SpiFormationAddAttributes extends StencilHTMLAttributes {}

  interface SpiFormationEdit {
    'match': MatchResults;
  }
  interface SpiFormationEditAttributes extends StencilHTMLAttributes {
    'match'?: MatchResults;
  }

  interface SpiFormationOne {
    'data': Formation;
  }
  interface SpiFormationOneAttributes extends StencilHTMLAttributes {
    'data'?: Formation;
  }

  interface SpiFormation {
    'componentWillLoad': () => Promise<void>;
    'history': RouterHistory;
  }
  interface SpiFormationAttributes extends StencilHTMLAttributes {
    'history'?: RouterHistory;
  }

  interface SpiHeader {}
  interface SpiHeaderAttributes extends StencilHTMLAttributes {}

  interface SpiHome {}
  interface SpiHomeAttributes extends StencilHTMLAttributes {}

  interface SpiPromotion {
    'load': () => Promise<void>;
  }
  interface SpiPromotionAttributes extends StencilHTMLAttributes {}

  interface SpiRoot {}
  interface SpiRootAttributes extends StencilHTMLAttributes {}
}

declare global {
  interface StencilElementInterfaces {
    'SpiCandidatAdd': Components.SpiCandidatAdd;
    'SpiCandidatEdit': Components.SpiCandidatEdit;
    'SpiCandidatFetch': Components.SpiCandidatFetch;
    'SpiCandidat': Components.SpiCandidat;
    'SpiEnseignantAdd': Components.SpiEnseignantAdd;
    'SpiEnseignantFetch': Components.SpiEnseignantFetch;
    'SpiEnseignant': Components.SpiEnseignant;
    'SpiFormationAdd': Components.SpiFormationAdd;
    'SpiFormationEdit': Components.SpiFormationEdit;
    'SpiFormationOne': Components.SpiFormationOne;
    'SpiFormation': Components.SpiFormation;
    'SpiHeader': Components.SpiHeader;
    'SpiHome': Components.SpiHome;
    'SpiPromotion': Components.SpiPromotion;
    'SpiRoot': Components.SpiRoot;
  }

  interface StencilIntrinsicElements {
    'spi-candidat-add': Components.SpiCandidatAddAttributes;
    'spi-candidat-edit': Components.SpiCandidatEditAttributes;
    'spi-candidat-fetch': Components.SpiCandidatFetchAttributes;
    'spi-candidat': Components.SpiCandidatAttributes;
    'spi-enseignant-add': Components.SpiEnseignantAddAttributes;
    'spi-enseignant-fetch': Components.SpiEnseignantFetchAttributes;
    'spi-enseignant': Components.SpiEnseignantAttributes;
    'spi-formation-add': Components.SpiFormationAddAttributes;
    'spi-formation-edit': Components.SpiFormationEditAttributes;
    'spi-formation-one': Components.SpiFormationOneAttributes;
    'spi-formation': Components.SpiFormationAttributes;
    'spi-header': Components.SpiHeaderAttributes;
    'spi-home': Components.SpiHomeAttributes;
    'spi-promotion': Components.SpiPromotionAttributes;
    'spi-root': Components.SpiRootAttributes;
  }


  interface HTMLSpiCandidatAddElement extends Components.SpiCandidatAdd, HTMLStencilElement {}
  var HTMLSpiCandidatAddElement: {
    prototype: HTMLSpiCandidatAddElement;
    new (): HTMLSpiCandidatAddElement;
  };

  interface HTMLSpiCandidatEditElement extends Components.SpiCandidatEdit, HTMLStencilElement {}
  var HTMLSpiCandidatEditElement: {
    prototype: HTMLSpiCandidatEditElement;
    new (): HTMLSpiCandidatEditElement;
  };

  interface HTMLSpiCandidatFetchElement extends Components.SpiCandidatFetch, HTMLStencilElement {}
  var HTMLSpiCandidatFetchElement: {
    prototype: HTMLSpiCandidatFetchElement;
    new (): HTMLSpiCandidatFetchElement;
  };

  interface HTMLSpiCandidatElement extends Components.SpiCandidat, HTMLStencilElement {}
  var HTMLSpiCandidatElement: {
    prototype: HTMLSpiCandidatElement;
    new (): HTMLSpiCandidatElement;
  };

  interface HTMLSpiEnseignantAddElement extends Components.SpiEnseignantAdd, HTMLStencilElement {}
  var HTMLSpiEnseignantAddElement: {
    prototype: HTMLSpiEnseignantAddElement;
    new (): HTMLSpiEnseignantAddElement;
  };

  interface HTMLSpiEnseignantFetchElement extends Components.SpiEnseignantFetch, HTMLStencilElement {}
  var HTMLSpiEnseignantFetchElement: {
    prototype: HTMLSpiEnseignantFetchElement;
    new (): HTMLSpiEnseignantFetchElement;
  };

  interface HTMLSpiEnseignantElement extends Components.SpiEnseignant, HTMLStencilElement {}
  var HTMLSpiEnseignantElement: {
    prototype: HTMLSpiEnseignantElement;
    new (): HTMLSpiEnseignantElement;
  };

  interface HTMLSpiFormationAddElement extends Components.SpiFormationAdd, HTMLStencilElement {}
  var HTMLSpiFormationAddElement: {
    prototype: HTMLSpiFormationAddElement;
    new (): HTMLSpiFormationAddElement;
  };

  interface HTMLSpiFormationEditElement extends Components.SpiFormationEdit, HTMLStencilElement {}
  var HTMLSpiFormationEditElement: {
    prototype: HTMLSpiFormationEditElement;
    new (): HTMLSpiFormationEditElement;
  };

  interface HTMLSpiFormationOneElement extends Components.SpiFormationOne, HTMLStencilElement {}
  var HTMLSpiFormationOneElement: {
    prototype: HTMLSpiFormationOneElement;
    new (): HTMLSpiFormationOneElement;
  };

  interface HTMLSpiFormationElement extends Components.SpiFormation, HTMLStencilElement {}
  var HTMLSpiFormationElement: {
    prototype: HTMLSpiFormationElement;
    new (): HTMLSpiFormationElement;
  };

  interface HTMLSpiHeaderElement extends Components.SpiHeader, HTMLStencilElement {}
  var HTMLSpiHeaderElement: {
    prototype: HTMLSpiHeaderElement;
    new (): HTMLSpiHeaderElement;
  };

  interface HTMLSpiHomeElement extends Components.SpiHome, HTMLStencilElement {}
  var HTMLSpiHomeElement: {
    prototype: HTMLSpiHomeElement;
    new (): HTMLSpiHomeElement;
  };

  interface HTMLSpiPromotionElement extends Components.SpiPromotion, HTMLStencilElement {}
  var HTMLSpiPromotionElement: {
    prototype: HTMLSpiPromotionElement;
    new (): HTMLSpiPromotionElement;
  };

  interface HTMLSpiRootElement extends Components.SpiRoot, HTMLStencilElement {}
  var HTMLSpiRootElement: {
    prototype: HTMLSpiRootElement;
    new (): HTMLSpiRootElement;
  };

  interface HTMLElementTagNameMap {
    'spi-candidat-add': HTMLSpiCandidatAddElement
    'spi-candidat-edit': HTMLSpiCandidatEditElement
    'spi-candidat-fetch': HTMLSpiCandidatFetchElement
    'spi-candidat': HTMLSpiCandidatElement
    'spi-enseignant-add': HTMLSpiEnseignantAddElement
    'spi-enseignant-fetch': HTMLSpiEnseignantFetchElement
    'spi-enseignant': HTMLSpiEnseignantElement
    'spi-formation-add': HTMLSpiFormationAddElement
    'spi-formation-edit': HTMLSpiFormationEditElement
    'spi-formation-one': HTMLSpiFormationOneElement
    'spi-formation': HTMLSpiFormationElement
    'spi-header': HTMLSpiHeaderElement
    'spi-home': HTMLSpiHomeElement
    'spi-promotion': HTMLSpiPromotionElement
    'spi-root': HTMLSpiRootElement
  }

  interface ElementTagNameMap {
    'spi-candidat-add': HTMLSpiCandidatAddElement;
    'spi-candidat-edit': HTMLSpiCandidatEditElement;
    'spi-candidat-fetch': HTMLSpiCandidatFetchElement;
    'spi-candidat': HTMLSpiCandidatElement;
    'spi-enseignant-add': HTMLSpiEnseignantAddElement;
    'spi-enseignant-fetch': HTMLSpiEnseignantFetchElement;
    'spi-enseignant': HTMLSpiEnseignantElement;
    'spi-formation-add': HTMLSpiFormationAddElement;
    'spi-formation-edit': HTMLSpiFormationEditElement;
    'spi-formation-one': HTMLSpiFormationOneElement;
    'spi-formation': HTMLSpiFormationElement;
    'spi-header': HTMLSpiHeaderElement;
    'spi-home': HTMLSpiHomeElement;
    'spi-promotion': HTMLSpiPromotionElement;
    'spi-root': HTMLSpiRootElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
